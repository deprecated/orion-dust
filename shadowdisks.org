
* No evidence for a translucent disk in the Orion Nebula
+ Disk 218-354
** Comparison with giant silhouette

*** Loophole in the Miotello paper
+ Nebular background has a gradient across the disk, but tey didn't take account of this
+ This casts doubt on their measurements for the translucent portions

#+BEGIN_SRC python :results file
  import numpy as np
  import matplotlib.pyplot as plt
  for pos in ["east", "center", "west"]:
      x, y = np.loadtxt("114426-major-{}.dat".format(pos), unpack=True)
      plt.plot(x, y, label=pos)
  plt.ylim(0.0, None)
  plt.legend()
  plotfile = "114426-major-cuts.pdf"
  plt.savefig(plotfile)
  return plotfile
#+END_SRC

#+RESULTS:
[[file:114426-major-cuts.pdf]]

** Plotting cut profiles

#+BEGIN_SRC python :results file :tangle shadow-profiles.py
  import numpy as np
  import matplotlib.pyplot as plt
  pixscale = {"acs": 0.0500016812098, "wfpc2": 0.0455214603946}
  yscale = {"acs": 34.0, "wfpc2": 0.49}
  
  ao_data_radius = np.linspace(0.01, 1.04, 20)
  ao_data_major = np.array([
      0.06, 0.24, 0.39, 0.47, 0.56, 0.63, 0.67, 0.71, 0.74, 0.78, 0.83, 0.88, 0.91, 0.94, 0.98, 0.97, 0.98, 0.99, 1.00, 1.01
  ])
  ao_std_major = np.array([
      0.0, 0.145, 0.12, 0.09, 0.07, 0.06, 0.05, 0.04, 0.03, 0.02, 0.01, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00
  ])
  ao_data_minor = np.array([
      0.075, 0.26, 0.42, 0.52, 0.65, 0.73, 0.82, 0.88, 0.92, 0.97, 0.97, 0.98, 0.985, 0.985, 1.00, 1.02, 1.01, 1.00, 1.00, 1.01
  ])
  
  def get_xydata(s):
      x, y = np.loadtxt("{}-wcs.dat".format(s), unpack=True)
      return pixscale[camera]*(x - x0), y/yscale[camera]
  
  NR = 41
  rgrid = pixscale["acs"]*np.arange(NR) 
  ymajor_list_grid = []
  for i in range(NR):
      ymajor_list_grid.append(list())
  yminor_list_grid = []
  for i in range(NR):
      yminor_list_grid.append(list())
  
  fig = plt.figure(figsize=(8,8))
  fig.add_subplot(211)
  camera = "acs"
  for id_, x0 in [
          ["major-B06",  41.0], 
          ["major-R00L", 41.0], 
          ["major-R05L", 41.5], 
  ]:
      x, y = get_xydata(id_)
      print
      print camera, id_
  
      plt.bar(x, y, width=pixscale[camera], lw=0.0, color="k", align="center", alpha=0.1)
      plt.bar(x, 0.05*y, width=pixscale[camera], lw=0.0, color="k", align="center", alpha=0.2)
      if "B06" in id_:
          # Fit polynomial to BG sections
          m = (x < -1.0) | (x > 0.8)
          fit_major = np.poly1d(np.polyfit(x[m], y[m], 3))
          plt.plot(x, fit_major(x), color="k", alpha=0.5, lw=1)
      # Add into radial grid (always using ACS pixel size)
      for i, j in enumerate(abs(x/pixscale["acs"]).astype(int)):
          # save normalized brightness in a box according to the radius
          bright = y[i]/fit_major(x[i])
          print j, bright
          if j < NR:
              ymajor_list_grid[j].append(bright)
  
  # Calculate statistics for major axis
  ymajor_mean_grid = np.empty((NR,))
  ymajor_std_grid = np.empty((NR,))
  for j, ylist in enumerate(ymajor_list_grid):
      ymajor_mean_grid[j] = np.mean(ylist)
      ymajor_std_grid[j] = np.std(ylist)
  
  
  camera = "wfpc2"
  for id_, x0 in [
          ["major-wfpc2-R39", 44.0], 
  ]:
      x, y = get_xydata(id_)
      plt.plot(x, y, color="r", alpha=0.3)
      plt.plot(x, 0.05*y, color="r", alpha=0.6)
  
  # Don't plot the flanking major profiles any more
  # camera = "acs"
  # for id_, x0 in [
  #         ["major-top-R05L",  41.5], 
  #         ["major-bot-R05L",  41.5], 
  # ]:
  #     x, y = get_xydata(id_)
  #     plt.plot(x, y, color="k", alpha=0.3)
  
  plt.text(-1.9, 1.25, "M42 218-354: major axis cuts")
  plt.text(1.5, 0.1, "x 0.05")
  plt.text(1.5, 1.1, "x 1.00")
  plt.xlim(-2.0, 2.0)
  plt.ylim(0.0, 1.4)
  plt.grid(ls="-", alpha=0.3)
  plt.ylabel("Surface brightness")
  
  fig.add_subplot(212)
  camera = "acs"
  for id_, x0 in [
          ["minor-star-B06",  42.0], 
          ["minor-star-R00L", 41.0], 
          ["minor-star-R05L",  41.5], 
  ]:
      x, y = get_xydata(id_)
      # plt.plot(x, y, label=id_, drawstyle="steps-mid")
      plt.bar(x, y, width=pixscale[camera], lw=0.0, color="k", align="center", alpha=0.1)
      plt.bar(x, 0.05*y, width=pixscale[camera], lw=0.0, color="k", align="center", alpha=0.2)
      if "B06" in id_:
          # Fit polynomial to BG sections
          m = (x < -0.5) | (x > 0.5)
          fit_minor = np.poly1d(np.polyfit(x[m], y[m], 3))
          plt.plot(x, fit_minor(x), color="k", alpha=0.5, lw=1.5)
        # Add into radial grid (always using ACS pixel size)
      for i, j in enumerate(abs(x/pixscale["acs"]).astype(int)):
          # save normalized brightness in a box according to the radius
          bright = y[i]/fit_minor(x[i])
          print j, bright
          if j < NR:
              yminor_list_grid[j].append(bright)
  
  # Calculate statistics for minor axis
  yminor_mean_grid = np.empty((NR,))
  yminor_std_grid = np.empty((NR,))
  for j, ylist in enumerate(yminor_list_grid):
      yminor_mean_grid[j] = np.mean(ylist)
      yminor_std_grid[j] = np.std(ylist)
  
  camera = "wfpc2"
  for id_, x0 in [
          ["minor-wfpc2-R39", 45.5], 
  ]:
      x, y = get_xydata(id_)
      plt.plot(x, y, color="r", alpha=0.3)
      plt.plot(x, 0.05*y, color="r", alpha=0.6)
  
  plt.text(-1.9, 1.25, "M42 218-354: minor axis cuts")
  plt.text(1.5, 0.1, "x 0.05")
  plt.text(1.5, 1.1, "x 1.00")
  plt.xlim(-2.0, 2.0)
  plt.ylim(0.0, 1.4)
  plt.grid(ls="-", alpha=0.3)
  plt.ylabel("Surface brightness")
  
  
  figfile = "profiles-acs-218-354.pdf"
  plt.xlabel("Offset, arcsec")
  plt.legend()
  fig.tight_layout()
  plt.savefig(figfile)
  
  figfile = "cprofiles-acs-218-354.pdf"
  cfig = plt.figure(figsize=(8,5))
  ymax = 2.4  
  
  camera = "acs"
  for id_, x0, extra_scale, c, lab in [
          ["major-R00L",       41.0, 1.0,  "k", "H alpha"], 
          ["major-F435W-R00L", 41.0, 0.36, "b", "B continuum"], 
          ["major-F555W-R00L", 41.0, 0.95, "g", "V continuum"], 
          ["major-F775W-R00L", 41.0, 0.47, "r", "I continuum"], 
  ]:
      x, y = get_xydata(id_)
      # plt.plot(x, y, label=id_, drawstyle="steps-mid")
      plt.plot(x, y/extra_scale, c, alpha=0.7, label=lab)
  
  plt.xlim(-2.0, 2.0)
  plt.ylim(0.0, ymax)
  plt.grid(ls="-", alpha=0.3)
  plt.ylabel("Surface brightness")
  plt.xlabel("Offset, arcsec")
  plt.legend(fontsize="small", title="Filter", loc="upper left")
  fig.tight_layout()
  plt.savefig(figfile)
  
  
  
  figfile = "rprofiles-acs-218-354.pdf"
  rfig = plt.figure(figsize=(8,8))
  ymax = 1.4  
  
  rfig.add_subplot(211)
  plt.fill_betweenx([0.0, ymax], [0.34, 0.34], color="k", alpha=0.1) 
  m = ymajor_std_grid < 0.5
  p3, _, _ = plt.errorbar(ao_data_radius, ao_data_major, ao_std_major, fmt='bo')
  p1, _, _ = plt.errorbar(rgrid[m], ymajor_mean_grid[m], ymajor_std_grid[m], fmt='ro')
  # Add in WFPC2 as function of radius
  camera = "wfpc2"
  for id_, x0 in [
          ["major-wfpc2-R39", 44.0], 
  ]:
      x, y = get_xydata(id_)
      p2, = plt.plot(np.abs(x), y/fit_major(x), color="g", alpha=0.3)
  # finish WFPC2
  plt.xlim(0.0, 1.4)
  plt.ylim(0.0, ymax)
  plt.grid(ls="-", alpha=0.3)
  plt.legend([p1, p2, p3], ["HST-ACS", "HST-WFPC2", "Magellan AO"], loc="center right", title="Major axis", fancybox=True, shadow=True)
  plt.ylabel("Mean brightness profile")
  
  rfig.add_subplot(212)
  plt.fill_betweenx([0.0, ymax], [0.28, 0.28], color="k", alpha=0.1) 
  m = yminor_std_grid < 10.0
  p3, = plt.plot(ao_data_radius, ao_data_minor, 'bo')
  p1, _, _ = plt.errorbar(rgrid[m], yminor_mean_grid[m], yminor_std_grid[m], fmt='ro')
  # Add in WFPC2 as function of radius
  camera = "wfpc2"
  for id_, x0 in [
          ["minor-wfpc2-R39", 45.5], 
  ]:
      x, y = get_xydata(id_)
      p2, = plt.plot(np.abs(x), y/fit_minor(x), color="g", alpha=0.3)
  # finish WFPC2
  plt.xlim(0.0, 1.4)
  plt.ylim(0.0, ymax)
  plt.grid(ls="-", alpha=0.3)
  plt.legend([p1, p2, p3], ["HST-ACS", "HST-WFPC2", "Magellan AO"], loc="center right", title="Minor axis", fancybox=True, shadow=True)
  plt.xlabel("Radius, arcsec")
  plt.ylabel("Mean brightness profile")
  
  rfig.tight_layout()
  plt.savefig(figfile)
  
  return figfile
#+END_SRC

#+RESULTS:
[[file:rprofiles-acs-218-354.pdf]]

** Alignment of images

+ We center on the unsaturated star 219-355 just SE of the disk
  + The 2 Robberto (GO 10246) images are well-aligned
  + but the Bally (GO 9825) image is slightly off and needs shifting by about 1 arcsec


*** Calculation of the offset that should be applied to Bally
The apparent coordinates of the star in the different images are
|          |          RA |         Dec |      xpix |      ypix |  bright |
|----------+-------------+-------------+-----------+-----------+---------|
| Bally    | 5:35:21.795 | -5:23:55.40 | 3219.1345 | 5948.9333 | 95.0683 |
| Robberto | 5:35:21.878 | -5:23:55.48 | 7124.8684 | 4200.3029 | 55.6008 |
Note that the star seems to be variable, but that doesn't matter

So we can calculate the offset like this:
|               | Bally          | Robberto       | Diff         | arcsec |
|---------------+----------------+----------------+--------------+--------|
| RA (hms)      | 5@ 35' 21.795" | 5@ 35' 21.878" | 0@ 0' 0.083" |  1.239 |
| Dec (deg ' ") | -5@ 23' 55.40" | -5@ 23' 55.48" | -0@ 0' 0.08" | -0.080 |
#+TBLFM: @2$4=$3 - $2::@3$4=-($2 - $3)::@3$5=3600 deg($4);f3::@2$5=3600 14.93 deg($4);f3

In other words: (1.239, -0.080) arcsec.

**** In practise I aligned the images in DS9 like this:
#+BEGIN_SRC sh
# Robberto Strip 0L
xpaget ds9 file
# -> hlsp_orion_hst_acs_strip0l_f658n_v1_drz.fits[SCI]
xpaset -p ds9 pan to 5:35:21.878 -5:23:55.48 wcs fk5
# Bally
xpaset -p ds9 frame next
xpaget ds9 file
# -> j8oc06010_drz.fits[SCI]
xpaset -p ds9 pan to 5:35:21.795 -5:23:55.40 wcs fk5
# Robberto Strip 5L
xpaset -p ds9 frame next
xpaget ds9 file
# -> hlsp_orion_hst_acs_strip5l_f658n_v1_drz.fits[SCI]
xpaset -p ds9 pan to 5:35:21.878 -5:23:55.48 wcs fk5
#+END_SRC


**** The WFPC2 image

+ This has =CD1_1 = -1.26448501095961E-05= => 0.0455214603946 arcsec
+ whereas the ACS images have =CD1_1 = -1.388935589155969E-05= => 0.0500016812098 arcsec
** Templates to remove the saturated PSF
This star looks very similar
+ 5:35:00.103 -5:23:02.11 - 001-302
+ But it is binary
This one might be better
+ 5:34:57.732 -5:23:52.72 - 577-352


* Comparing shadow disks with shadow globules

+ Studies like Miotello claim to show increasingly large grains at higher optical depth
+ But there are questions about the effects of diffuse transmission through the disk
+ One way of addressing this would be with a comparitive study of
  1. The translucent parts of the slhouette disks
  2. Translucent foreground clouds and globules in the Veil
     + The SW cloud
     + The cloud to the E of LP Ori
     + The Dark Bay
     + Other small clouds
+ We have excellent wavelength coverage from U (3360 A) to I (8500 A) of all these regions with WFPC2 and ACS
+ Plus ground-based images from U to I with WFI, and JHK with ISPI
+ And finally NICMOS observations at 1.1 and 1.6 microns (JH), but this has very spotty coverage
  + Visit 49 would have been great for SW cloud but it was lost from pointing error
  + Visits 24, 25, 26 cover Dark Bay
  + Visits 48, 47 cover some clouds to NW of LL Ori
  + Visits 28, 29 cover some clouds in N of nebula
** Plan of what to do 
+ Take all the ACS images of the SW cloud and calculate A_{\lambda} = -2.5 log(S_{\lambda}/S_{0}) where S_{0} is the interpolated BG value
+ Plot A_{B} vs A_{V} etc
+ Compare with predictions of different extinction laws
+ Look for non-linearity
+ Compensate for a constant FG value
+ Then do the same for the shadow disks

** Fixing up the WCS in the C(Hb) map
:LOGBOOK:
CLOCK: [2013-09-05 Thu 10:00]--[2013-09-05 Thu 12:34] =>  2:34
:END:

+ Peg th1C to the coordinates in the Robberto ACS images
#+BEGIN_SRC python :results output
import astropy.io.fits as pyfits
f = pyfits.open("/Users/will/Work/BobPC/2005/chbeta-fix.fits")

hdr = f[0].header

# Convert to degrees
for k in ["CD1_1", "CD1_2", "CD2_1", "CD2_2"]:
    hdr[k] /= 3600.0
    if k.endswith("1"):
        hdr[k] *= -1.0
# Put in coords of th1C
hdr.update(ctype1="RA---TAN", ctype2="DEC--TAN", crpix1=389.4, crpix2=577.0, crval1=83.818547, crval2=-5.3897231)
f.writeto("chbeta-radec.fits", clobber=True)

#+END_SRC
 
#+RESULTS:
: WARNING: Overwriting existing file 'chbeta-radec.fits'. [astropy.io.fits.hdu.hdulist]

** An east-west cut across the southwest cloud
#+BEGIN_SRC python :results file
import numpy as np
import matplotlib.pyplot as plt
pixscale = {"acs": 0.0500016812098, "wfpc2": 0.0455214603946}

def get_xydata(camera, filter):
    x, y = np.loadtxt("swcloud-{}-{}.dat".format(camera, filter), unpack=True)
    return pixscale[camera]*x, y

filters = ["V", "B", "Ha", "i", "z"]

A = {}
for filt in filters:
    x, y = get_xydata("acs", filt)
    mleft = (x > 60.0) & (x < 70.0)
    mright = (x > 130.0)
    m = mleft | mright
    p = np.poly1d(np.polyfit(x[m], y[m], 2))
    A[filt] = -2.5*np.log10(y/p(x))
    msw = (x > 60.0) & (x < 150.0)
    plt.plot(A["V"], A[filt]/A["V"], ".", alpha=0.2, label=filt)

plt.ylim(-0.1, 1.1)
plt.xlabel("A_V")
plt.ylabel("A_lambda / A_V")
plt.legend(loc="upper left")
plt.grid(alpha=0.3)

figname = "swcloud-cuts-acs.pdf"
plt.savefig(figname)
return figname
#+END_SRC

#+RESULTS:
[[file:swcloud-cuts-acs.pdf]]

+ We graph A_{\lambda}/A_{V} as function of A_{V}
  + a lot of noise at A_{V}  < 0.2, as you would expect due to uncertainties in the nebular bg (and fluctuations)
  + more or less flat part extending from A_{V} = 0.5 to 1.5
    + This is what we expect for constant dust properties and no scattering
    + Some filters show multiple strands in range 0.5 to 1
    + Average values around A_{V} = 1.2
      | Filter |    \lambda |  1/\lambda | A_{\lambda}/A_{V} |
      |--------+------+------+-------|
      | B      | 4350 | 2.30 |  0.76 |
      | V      | 5550 | 1.80 |   1.0 |
      | H\alpha     | 6580 | 1.52 |   0.9 |
      | i      | 7750 | 1.29 |   0.7 |
      | z      | 8500 | 1.18 |  0.63 |
      #+TBLFM: $3=10000/$2 ; f2
    + This extinction curve is very similar to what Miotello find for their pixel A, which is one where they say the grains are 0.6 microns
    + Except that our peak in the V-band is a bit narrower


+ tendency to go up from A_{V} = 1.5 to 2
* Reflection nebulae in M42
There are several areas of reflection nebulosity:
+ Cavity around LP Ori
+ Bright Blue Star to the SW
  + This looks great - more or less circular, but with wisps
  + Reminiscent of the Pleiades
+ The Bright Bar, in particular the SW end
+ The gray wisps:
  + The ones between the Trapezium and LL2
  + The ones to SE of L Ori
  + The ones in the far S
+ The steely blue-gray shell
  + The rippling wing to the SE
  + The NW wing
+ The gray globules to the far W
* COMMENT Export options
#+TITLE: Shadow Disks
#+AUTHOR: William Henney
#+EMAIL: w.henney@crya.unam.mx
#+OPTIONS: ':nil *:t -:t ::t <:t H:5 \n:nil ^:{} arch:headline
#+OPTIONS: author:t c:nil creator:comment d:(not LOGBOOK) date:t e:t
#+OPTIONS: email:nil f:t inline:t num:nil p:nil pri:nil stat:t tags:t
#+OPTIONS: tasks:t tex:t timestamp:t toc:nil todo:t |:t
#+CREATOR: Emacs 24.3.1 (Org mode 8.0.7)
#+DESCRIPTION:
#+EXCLUDE_TAGS: noexport
#+KEYWORDS:
#+LANGUAGE: en
#+SELECT_TAGS: export










